//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WindowsFormsApp1.Sensor {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SensorSoap11Binding", Namespace="http://ws.apache.org/axis2")]
    public partial class Sensor : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getSensorOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFechaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getVolumenOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFechaUltModifOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLedOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLedOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFechaUltModifOperationCompleted;
        
        private System.Threading.SendOrPostCallback setVolumenOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSensorOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Sensor() {
            this.Url = global::WindowsFormsApp1.Properties.Settings.Default.WindowsFormsApp1_Sensor_Sensor;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getSensorCompletedEventHandler getSensorCompleted;
        
        /// <remarks/>
        public event getFechaCompletedEventHandler getFechaCompleted;
        
        /// <remarks/>
        public event getIdCompletedEventHandler getIdCompleted;
        
        /// <remarks/>
        public event getVolumenCompletedEventHandler getVolumenCompleted;
        
        /// <remarks/>
        public event setFechaUltModifCompletedEventHandler setFechaUltModifCompleted;
        
        /// <remarks/>
        public event getLedCompletedEventHandler getLedCompleted;
        
        /// <remarks/>
        public event setLedCompletedEventHandler setLedCompleted;
        
        /// <remarks/>
        public event getFechaUltModifCompletedEventHandler getFechaUltModifCompleted;
        
        /// <remarks/>
        public event setVolumenCompletedEventHandler setVolumenCompleted;
        
        /// <remarks/>
        public event setSensorCompletedEventHandler setSensorCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getSensor", RequestNamespace="http://ws.apache.org/axis2", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getSensor() {
            this.Invoke("getSensor", new object[0]);
        }
        
        /// <remarks/>
        public void getSensorAsync() {
            this.getSensorAsync(null);
        }
        
        /// <remarks/>
        public void getSensorAsync(object userState) {
            if ((this.getSensorOperationCompleted == null)) {
                this.getSensorOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSensorOperationCompleted);
            }
            this.InvokeAsync("getSensor", new object[0], this.getSensorOperationCompleted, userState);
        }
        
        private void OngetSensorOperationCompleted(object arg) {
            if ((this.getSensorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSensorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getFecha", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getFecha() {
            object[] results = this.Invoke("getFecha", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFechaAsync() {
            this.getFechaAsync(null);
        }
        
        /// <remarks/>
        public void getFechaAsync(object userState) {
            if ((this.getFechaOperationCompleted == null)) {
                this.getFechaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFechaOperationCompleted);
            }
            this.InvokeAsync("getFecha", new object[0], this.getFechaOperationCompleted, userState);
        }
        
        private void OngetFechaOperationCompleted(object arg) {
            if ((this.getFechaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFechaCompleted(this, new getFechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getId", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int getId() {
            object[] results = this.Invoke("getId", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getIdAsync() {
            this.getIdAsync(null);
        }
        
        /// <remarks/>
        public void getIdAsync(object userState) {
            if ((this.getIdOperationCompleted == null)) {
                this.getIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIdOperationCompleted);
            }
            this.InvokeAsync("getId", new object[0], this.getIdOperationCompleted, userState);
        }
        
        private void OngetIdOperationCompleted(object arg) {
            if ((this.getIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIdCompleted(this, new getIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getVolumen", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int getVolumen() {
            object[] results = this.Invoke("getVolumen", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getVolumenAsync() {
            this.getVolumenAsync(null);
        }
        
        /// <remarks/>
        public void getVolumenAsync(object userState) {
            if ((this.getVolumenOperationCompleted == null)) {
                this.getVolumenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVolumenOperationCompleted);
            }
            this.InvokeAsync("getVolumen", new object[0], this.getVolumenOperationCompleted, userState);
        }
        
        private void OngetVolumenOperationCompleted(object arg) {
            if ((this.getVolumenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getVolumenCompleted(this, new getVolumenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setFechaUltModif", RequestNamespace="http://ws.apache.org/axis2", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setFechaUltModif([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fechaUltModif) {
            this.Invoke("setFechaUltModif", new object[] {
                        fechaUltModif});
        }
        
        /// <remarks/>
        public void setFechaUltModifAsync(string fechaUltModif) {
            this.setFechaUltModifAsync(fechaUltModif, null);
        }
        
        /// <remarks/>
        public void setFechaUltModifAsync(string fechaUltModif, object userState) {
            if ((this.setFechaUltModifOperationCompleted == null)) {
                this.setFechaUltModifOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFechaUltModifOperationCompleted);
            }
            this.InvokeAsync("setFechaUltModif", new object[] {
                        fechaUltModif}, this.setFechaUltModifOperationCompleted, userState);
        }
        
        private void OnsetFechaUltModifOperationCompleted(object arg) {
            if ((this.setFechaUltModifCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFechaUltModifCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getLed", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public int getLed() {
            object[] results = this.Invoke("getLed", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getLedAsync() {
            this.getLedAsync(null);
        }
        
        /// <remarks/>
        public void getLedAsync(object userState) {
            if ((this.getLedOperationCompleted == null)) {
                this.getLedOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLedOperationCompleted);
            }
            this.InvokeAsync("getLed", new object[0], this.getLedOperationCompleted, userState);
        }
        
        private void OngetLedOperationCompleted(object arg) {
            if ((this.getLedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLedCompleted(this, new getLedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setLed", RequestNamespace="http://ws.apache.org/axis2", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setLed(int led) {
            this.Invoke("setLed", new object[] {
                        led});
        }
        
        /// <remarks/>
        public void setLedAsync(int led) {
            this.setLedAsync(led, null);
        }
        
        /// <remarks/>
        public void setLedAsync(int led, object userState) {
            if ((this.setLedOperationCompleted == null)) {
                this.setLedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLedOperationCompleted);
            }
            this.InvokeAsync("setLed", new object[] {
                        led}, this.setLedOperationCompleted, userState);
        }
        
        private void OnsetLedOperationCompleted(object arg) {
            if ((this.setLedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getFechaUltModif", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getFechaUltModif() {
            object[] results = this.Invoke("getFechaUltModif", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getFechaUltModifAsync() {
            this.getFechaUltModifAsync(null);
        }
        
        /// <remarks/>
        public void getFechaUltModifAsync(object userState) {
            if ((this.getFechaUltModifOperationCompleted == null)) {
                this.getFechaUltModifOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFechaUltModifOperationCompleted);
            }
            this.InvokeAsync("getFechaUltModif", new object[0], this.getFechaUltModifOperationCompleted, userState);
        }
        
        private void OngetFechaUltModifOperationCompleted(object arg) {
            if ((this.getFechaUltModifCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFechaUltModifCompleted(this, new getFechaUltModifCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setVolumen", RequestNamespace="http://ws.apache.org/axis2", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setVolumen(int v) {
            this.Invoke("setVolumen", new object[] {
                        v});
        }
        
        /// <remarks/>
        public void setVolumenAsync(int v) {
            this.setVolumenAsync(v, null);
        }
        
        /// <remarks/>
        public void setVolumenAsync(int v, object userState) {
            if ((this.setVolumenOperationCompleted == null)) {
                this.setVolumenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetVolumenOperationCompleted);
            }
            this.InvokeAsync("setVolumen", new object[] {
                        v}, this.setVolumenOperationCompleted, userState);
        }
        
        private void OnsetVolumenOperationCompleted(object arg) {
            if ((this.setVolumenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setVolumenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setSensor", RequestNamespace="http://ws.apache.org/axis2", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setSensor() {
            this.Invoke("setSensor", new object[0]);
        }
        
        /// <remarks/>
        public void setSensorAsync() {
            this.setSensorAsync(null);
        }
        
        /// <remarks/>
        public void setSensorAsync(object userState) {
            if ((this.setSensorOperationCompleted == null)) {
                this.setSensorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSensorOperationCompleted);
            }
            this.InvokeAsync("setSensor", new object[0], this.setSensorOperationCompleted, userState);
        }
        
        private void OnsetSensorOperationCompleted(object arg) {
            if ((this.setSensorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSensorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSensorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getFechaCompletedEventHandler(object sender, getFechaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFechaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFechaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getIdCompletedEventHandler(object sender, getIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getVolumenCompletedEventHandler(object sender, getVolumenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getVolumenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getVolumenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setFechaUltModifCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getLedCompletedEventHandler(object sender, getLedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setLedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getFechaUltModifCompletedEventHandler(object sender, getFechaUltModifCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFechaUltModifCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFechaUltModifCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setVolumenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setSensorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591